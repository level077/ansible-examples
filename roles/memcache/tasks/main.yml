---
# The playbook for memcache

- name: check memcache
  command: /usr/local/bin/memcached -h
  register: mem_result
  when: state != "absent"
  tags: memcache

- name: rsync memcache
  synchronize: src={{ package_path }}/memcache/memcache dest=/tmp
  when: state == "upgrade" or mem_result is defined and mem_result.rc != 0
  tags: memcache

- name: yum install libevent-devel
  yum: name=libevent-devel state=present
  when: state == "upgrade" or mem_result is defined and mem_result.rc != 0
  tags: memcache

- name: config memcache_{{ port }}
  command: chdir=/tmp/memcache ./configure
  when: state == "upgrade" or mem_result is defined and mem_result.rc != 0
  tags: memcache

- name: make memcache_{{ port }}
  command: chdir=/tmp/memcache make -j4
  when: state == "upgrade" or mem_result is defined and mem_result.rc != 0
  tags: memcache

- name: make install memcache_{{ port }}
  command: chdir=/tmp/memcache make install
  when: state == "upgrade" or mem_result is defined and mem_result.rc != 0
  tags: memcache

- name: deploy memcache_{{ port }} init script
  template: src=memcached dest=/etc/init.d/memcache_{{ port }} mode=0755
  when: state != "absent"
  tags: memcache

- name: start memcache_{{ port }} service
  service: name=memcache_{{ port }} enabled=yes state=started
  when: state != "absent"
  tags: memcache

- name: wait for memcached_{{ port }} to start
  wait_for: port={{ port }}
  async: 45
  poll: 5
  when: state != "absent"
  tags: memcache

- name: stop memcache_{{ port }} service
  service: name=memcache_{{ port }} enabled=no state=stopped
  when: state == "absent" 
  ignore_errors: true
  tags: memcache

- name: rm memcache_{{ port }} init script
  file: dest=/etc/init.d/memcache_{{ port }} state=absent
  when: state == "absent" 
  tags: memcache
