---
# The role for mongodb
#
# Usage: { role: mongodb, install:path: /usr/local, user: mongod, mongodb_file: mongodb_2.8.0, port: 27017, db_path: /opt, replSet: test }
#

- name: check mongodb
  command: "{{ install_path }}/mongodb/bin/mongo --version"
  register: mongodb_result
  ignore_errors: true
  when: state != "absent"
  tags: mongodb

- name: useradd {{ user }}
  user: name={{ user }} createhome=no shell=/sbin/nologin
  when: state != "absent"
  tags: mongodb

- name: rsync {{ mongodb_file }}
  synchronize: src={{ package_path }}/mongodb/{{ mongodb_file }} dest={{ install_path}}
  when: mongodb_result is defined and mongodb_result.rc !=0 or state == "upgrade"
  tags: mongodb

- name: ln -s {{ install_path }}/{{ mongodb_file }} { install_path }}/mongodb
  file: src={{ install_path }}/{{ mongodb_file }} dest={{ install_path }}/mongodb state=link
  when: state != "absent"
  tags: mongodb

- name: create /etc/mongodb/{{ port }} dir for mongodb
  file: dest=/etc/mongodb/{{ port }} state=directory
  when: state != "absent"
  tags: mongodb

- name: deploy mongod.conf
  template: src=mongod.conf dest=/etc/mongodb/{{ port }}/mongod_{{ port }}.conf
  when: state != "absent"
  tags: mongodb

- name: deploy init script
  template: src=mongod dest=/etc/init.d/mongod_{{ port }} mode=0755
  when: state != "absent"
  tags: mongodb

- name: create {{ db_path }}/mongodb/{{ port }} dir for mongodb
  file: dest={{ db_path }}/mongodb/{{ port }} state=directory owner={{ user }} group={{ user }} recurse=yes 
  when: state != "absent"
  tags: mongodb

- name: start mongodb service
  service: name=mongod_{{ port }} enabled=yes state=started
  when: state != "absent"
  tags: mongodb

- name: wait for mongodb to start
  wait_for: port={{ port }}
  async: 45
  poll: 5
  when: state != "absent"
  tags: mongodb

- name: stop mongodb service
  service: name=mongod_{{ port }} enabled=no state=stopped
  when: state == "absent" 
  ignore_errors: true
  tags: mongodb

- name: rm mongod_{{ port }} init script
  file: dest=/etc/init.d/mongod_{{ port }} state=absent
  when: state == "absent" 
  tags: mongodb

- name: rm mongod_{{ port }}.conf 
  file: dest=/etc/mongodb/{{ port }}/mongod_{{ port }}.conf state=absent
  when: state == "absent"
  tags: mongodb

- name: rm {{ db_path }}/mongodb/{{ port }}
  file: dest={{ db_path }}/mongodb/{{ port }} state=absent
  when: state == "absent"
  tags: mongodb
