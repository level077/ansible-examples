---
- name: mkdir /root/ssl/{{ kubernetes_cluster_name }}
  file: path=/root/ssl/{{ kubernetes_cluster_name }} state=directory
  delegate_to: localhost
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: rsync csr config to /root/ssl/{{ kubernetes_cluster_name }}
  template: src={{ item }} dest=/root/ssl/{{ kubernetes_cluster_name }}
  delegate_to: localhost
  with_items:
  - ca-csr.json
  - ca-config.json
  - kubernetes-csr.json
  - admin-csr.json
  - kube-proxy-csr.json
  - proxy-client-csr.json
  - gen_cert.sh
  - gen_kubeconfig.sh
  - gen_token.sh
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy cfssl
  copy: src={{ item }} dest=/root/ssl mode=0755
  delegate_to: localhost
  with_items:
  - cfssl_linux-amd64
  - cfssljson_linux-amd64
  - cfssl-certinfo_linux-amd64
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: gen cert token.csv kubeconfig
  shell: /bin/sh /root/ssl/{{ kubernetes_cluster_name }}/{{ item }}
  with_items:
  - gen_cert.sh
  - gen_token.sh
  - gen_kubeconfig.sh
  when: k8s_tls_master_state != "absent" and kubernetes_cluster == "new"
  notify:
  - restart kubernetes master
  delegate_to: localhost
  tags: k8s_tls_master

- name: mkdir /etc/kubernetes/ssl
  file: path=/etc/kubernetes/ssl state=directory
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy cert
  synchronize: src=/root/ssl/{{ kubernetes_cluster_name }}/{{ item }} dest=/etc/kubernetes/ssl
  with_items:
  - ca.pem
  - ca-key.pem
  - kubernetes.pem
  - kubernetes-key.pem
  - proxy-client.pem
  - proxy-client-key.pem
  - bootstrap_token_secret.yaml
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: create /root/.kube
  file: path=/root/.kube state=directory
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy kubectl.kubeconfig
  synchronize: src=/root/ssl/{{ kubernetes_cluster_name }}/kubectl.kubeconfig dest=/root/.kube/config
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: rsync kubectl kube-apiserver kube-scheduler kube-controoler-manager
  synchronize: src={{ kubernetes_version }}/{{ item }} dest=/usr/bin
  with_items:
  - kubectl
  - kube-apiserver
  - kube-scheduler
  - kube-controller-manager
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

# because of metrics-server, matser must install calico-node 
- name: install docker
  yum: name=docker state=present
  tags: k8s_tls_master

- name: modprobe overlay
  command: modprobe overlay
  ignore_errors: True
  when: k8s_tls_master_state != "absent"

- name: template docker-storage
  template: src={{ item }} dest=/etc/sysconfig
  with_items:
  - docker-storage
  notify:
  - restart docker
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: mkdir {{ docker_root_dir }}
  file: path={{ docker_root_dir }} state=directory
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: template docker.service
  template: src=docker.service dest=/usr/lib/systemd/system
  notify:
  - systemctl daemon-reload
  - restart docker
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: mkdir /etc/calico
  file: path=/etc/calico state=directory
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy calico-rbac.yml calico.yml calicoctl.cfg calico.env ipPool.yaml
  template: src={{ item }} dest=/etc/calico
  with_items:
  - calico.yaml
  - calico-rbac.yml
  - calicoctl.cfg
  - calico.env
  - ipPool.yaml
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: rsync calicoctl to /usr/bin
  synchronize: src=calicoctl dest=/usr/bin
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: set calico ip range
  shell: calicoctl apply -f /etc/calico/ipPool.yaml
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: template calico-node.service
  template: src=calico-node.service dest=/usr/lib/systemd/system
  notify:
  - systemctl daemon-reload
  - restart calico-node
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: enabled calico-node
  service: name=calico-node enabled=yes state=started
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master 

- name: disable selinux
  command: setenforce 0
  ignore_errors: True
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: disable firewalld
  service: name=firewalld enabled=no state=stopped
  ignore_errors: True
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy kube-apiserver kube-controller-manager kube-scheduler systemd service
  template: src={{ item }} dest=/usr/lib/systemd/system
  with_items:
  - kube-apiserver.service
  - kube-controller-manager.service
  - kube-scheduler.service
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy kube-apiserver kube-controller-manager kube-scheduler config
  template: src={{ item }} dest=/etc/kubernetes
  with_items:
  - config
  - apiserver
  - controller-manager
  - scheduler
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: enable kube-apiserver kube-controller-manager kube-scheduler
  service: name={{ item }} enabled=yes state=started
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy clusterrolebindings.yml coredns
  template: src={{ item }} dest=/usr/local/src
  with_items:
  - clusterrolebindings.yml
  - coredns.yml
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master
  
- name: kubectl apply -f /usr/local/src/clusterrolebindings.yml /usr/local/src/coredns.yml
  shell: kubectl apply -f {{ item }}
  with_items:
  - /etc/kubernetes/ssl/bootstrap_token_secret.yaml 
  - /usr/local/src/clusterrolebindings.yml
  - /usr/local/src/coredns.yml
  ignore_errors: true
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: kubectl apply -f /etc/calico/calico-rbac.yml /etc/calico/calico.yaml
  shell: kubectl apply -f {{ item }}
  with_items:
  - /etc/calico/calico-rbac.yml
  - /etc/calico/calico.yaml
  ignore_errors: true
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: deploy metrics-server yaml
  template: src={{ item }} dest=/usr/local/src
  with_items:
  - auth-delegator.yaml
  - auth-reader.yaml
  - resource-reader.yaml
  - view-metrics.yaml
  - metrics-server-service.yaml
  - metrics-server-deployment.yaml
  - metrics-apiservice.yaml
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: kubectl apply -f metrics-server
  shell: kubectl apply -f {{ item }}
  with_items:
  - /usr/local/src/auth-delegator.yaml
  - /usr/local/src/auth-reader.yaml
  - /usr/local/src/resource-reader.yaml
  - /usr/local/src/view-metrics.yaml
  - /usr/local/src/metrics-server-service.yaml
  - /usr/local/src/metrics-server-deployment.yaml
  - /usr/local/src/metrics-apiservice.yaml
  ignore_errors: true
  when: k8s_tls_master_state != "absent"
  tags: k8s_tls_master

- name: stop kube-apiserver kube-controller-manager kube-scheduler
  service: name={{ item }} state=stopped enabled=no
  with_items:
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler
  ignore_errors: true
  when: k8s_tls_master_state == "absent"
  tags: k8s_tls_master

- name: rm kube-apiserver kube-controller-manager kube-scheduler
  file: path={{ item }} state=absent
  with_items:
  - /usr/bin/kubectl
  - /usr/bin/kube-apiserver
  - /usr/bin/kube-controller-manager
  - /usr/bin/kube-scheduler
  - /usr/lib/systemd/system/kube-apiserver.service
  - /usr/lib/systemd/system/kube-controller-manager.service
  - /usr/lib/systemd/system/kube-scheduler.service
  - /etc/kubernetes
  when: k8s_tls_master_state == "absent"
  tags: k8s_tls_master
